function saveSession(app, filename)
    % Save all relevant data from the GUI to a .mat file for reproducibility
    
    % Save the current parameters
    sessionData.params = app.params;
    
    % Save the results
    sessionData.results = app.results;
    
    % Save the loaded data
    sessionData.data = app.data;
    
    % Save the model information
    sessionData.Model = app.Model;
    
    % Save the optimization results
    sessionData.OptimOutput = app.OptimOutput;
    
    % Save the MCMC results
    sessionData.MCMCResults = app.MCMCResults;
    
    % Save the GA information
    sessionData.gaInfo = app.gaInfo;
    
    % Save the correlation matrix
    sessionData.corrMatrix = app.CorrMatrixTable.Data;
    
    % Save the heatmap data
    sessionData.heatmapData = struct(...
        'XData', app.CorrelationHeatmapUIAxes.XData, ...
        'YData', app.CorrelationHeatmapUIAxes.YData, ...
        'CData', app.CorrelationHeatmapUIAxes.CData);
    
    % Save the plots in the Error Analysis tab
    sessionData.errorAnalysisPlots = struct(...
        'CheckBox_Cyt_c_red_prop', app.CheckBox_Cyt_c_red_prop.Value, ...
        'CheckBox_P_leak', app.CheckBox_P_leak.Value, ...
        'CheckBox_V_Max_C_V', app.CheckBox_V_Max_C_V.Value, ...
        'CheckBox_K_C_V', app.CheckBox_K_C_V.Value, ...
        'CheckBox_K_m_C_V', app.CheckBox_K_m_C_V.Value, ...
        'CheckBox_V_Max_C_IV', app.CheckBox_V_Max_C_IV.Value, ...
        'CheckBox_K_C_IV', app.CheckBox_K_C_IV.Value, ...
        'CheckBox_K_m_C_IV', app.CheckBox_K_m_C_IV.Value, ...
        'CheckBox_K_m_c0', app.CheckBox_K_m_c0.Value, ...
        'CheckBox_Cyt_c_tot', app.CheckBox_Cyt_c_tot.Value, ...
        'CheckBox_alpha_1', app.CheckBox_alpha_1.Value, ...
        'CheckBox_alpha_2', app.CheckBox_alpha_2.Value, ...
        'CheckBox_alpha_3', app.CheckBox_alpha_3.Value, ...
        'CheckBox_alpha_4', app.CheckBox_alpha_4.Value, ...
        'CheckBox_r_reduce', app.CheckBox_r_reduce.Value ...
    );

    % Save the UI table
    sessionData.UITableData = app.UITable.Data;
    
    % Save the dropdown states
    sessionData.DropDownStates = struct(...
        'VisualizationType', app.VisualizationTypeDropDown.Value, ...
        'OptimizationAlgType', app.OptimizationAlgTypeDropDown.Value, ...
        'ResultsType', app.ResultsTypeDropDown.Value, ...
        'LoadExcelData', app.LoadExcelDataDropDown.Value);

    % Save the toggle states
    sessionData.ToggleStates = struct(...
        'TimeUnit', app.CurrentTimeUnit, ...
        'MinuteButton', app.MinuteButton.Value, ...
        'SecondButton', app.SecondButton.Value);

    % Save the axes data from the plots
    sessionData.Plots = struct(...
        'O2_plot', getPlotData(app.O2_plot), ...
        'OCR_plot', getPlotData(app.OCR_plot), ...
        'Cytc_plot', getPlotData(app.Cytc_plot), ...
        'H_N_plot', getPlotData(app.H_N_plot), ...
        'H_P_plot', getPlotData(app.H_P_plot));
    
    % Save the sessionData struct to a .mat file
    save(filename, 'sessionData');
end

function plotData = getPlotData(axisHandle)
    % Helper function to extract plot data from an axis
    lines = findobj(axisHandle, 'Type', 'Line');
    plotData = struct();
    for i = 1:length(lines)
        plotData(i).XData = lines(i).XData;
        plotData(i).YData = lines(i).YData;
        plotData(i).LineStyle = lines(i).LineStyle;
        plotData(i).Color = lines(i).Color;
    end
end
